{"ast":null,"code":"var _jsxFileName = \"/Users/chrismiller/development/vschool/assignments/ugly-things/src/components/UglyList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { ThemeContext } from \"../themeContext\";\nimport UglyItem from \"./UglyItem\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UglyList(props) {\n  _s();\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios.post(\"https://api.vschool.io/chrismiller86/thing\", props.inputData).then(() => props.getData()).catch(error => console.log(error));\n    props.setInputData(props.blankInfo);\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    props.setInputData(prevInputData => ({ ...prevInputData,\n      [name]: value\n    }));\n  }\n\n  function toggleEdit() {\n    setInputData(prevState => ({\n      isEditing: !prevState.isEditing\n    }));\n  }\n\n  const context = useContext(ThemeContext);\n  const list = context.uglyList.map((item, index) => (console.log(item._id), /*#__PURE__*/_jsxDEV(UglyItem, {\n    id: item._id,\n    title: item.title,\n    img: item.imgUrl,\n    description: item.description,\n    handleIt: handleSubmit,\n    changeIt: handleChange,\n    toggleIt: toggleEdit\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UglyList, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = UglyList;\nexport default UglyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UglyList\");","map":{"version":3,"sources":["/Users/chrismiller/development/vschool/assignments/ugly-things/src/components/UglyList.js"],"names":["React","useContext","ThemeContext","UglyItem","axios","UglyList","props","handleSubmit","event","preventDefault","post","inputData","then","getData","catch","error","console","log","setInputData","blankInfo","handleChange","name","value","target","prevInputData","toggleEdit","prevState","isEditing","context","list","uglyList","map","item","index","_id","title","imgUrl","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AAEAL,IAAAA,KAAK,CAACM,IAAN,CAAW,4CAAX,EAAyDJ,KAAK,CAACK,SAA/D,EACKC,IADL,CACU,MAAMN,KAAK,CAACO,OAAN,EADhB,EAEKC,KAFL,CAEWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFpB;AAGAT,IAAAA,KAAK,CAACY,YAAN,CAAmBZ,KAAK,CAACa,SAAzB;AACH;;AAED,WAASC,YAAT,CAAsBZ,KAAtB,EAA6B;AACzB,UAAM;AAAEa,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBd,KAAK,CAACe,MAA9B;AACAjB,IAAAA,KAAK,CAACY,YAAN,CAAmBM,aAAa,KAAK,EAEjC,GAAGA,aAF8B;AAGjC,OAACH,IAAD,GAAQC;AAHyB,KAAL,CAAhC;AAOH;;AAED,WAASG,UAAT,GAAsB;AAClBP,IAAAA,YAAY,CAACQ,SAAS,KAAK;AAAEC,MAAAA,SAAS,EAAE,CAACD,SAAS,CAACC;AAAxB,KAAL,CAAV,CAAZ;AACH;;AAID,QAAMC,OAAO,GAAG3B,UAAU,CAACC,YAAD,CAA1B;AACA,QAAM2B,IAAI,GAAGD,OAAO,CAACE,QAAR,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,MAE9BjB,OAAO,CAACC,GAAR,CAAYe,IAAI,CAACE,GAAjB,gBACA,QAAE,QAAF;AAEI,IAAA,EAAE,EAAEF,IAAI,CAACE,GAFb;AAGI,IAAA,KAAK,EAAEF,IAAI,CAACG,KAHhB;AAII,IAAA,GAAG,EAAEH,IAAI,CAACI,MAJd;AAKI,IAAA,WAAW,EAAEJ,IAAI,CAACK,WALtB;AAMI,IAAA,QAAQ,EAAE9B,YANd;AAOI,IAAA,QAAQ,EAAEa,YAPd;AAQI,IAAA,QAAQ,EAAEK;AARd,KACSQ,KADT;AAAA;AAAA;AAAA;AAAA,UAH8B,CAArB,CAAb;AAiBA,sBACI;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnDQxB,Q;;KAAAA,Q;AAqDT,eAAeA,QAAf","sourcesContent":["import React, { useContext } from \"react\"\nimport { ThemeContext } from \"../themeContext\"\nimport UglyItem from \"./UglyItem\"\nimport axios from \"axios\"\n\nfunction UglyList(props) {\n\n    function handleSubmit(event) {\n        event.preventDefault()\n\n        axios.post(\"https://api.vschool.io/chrismiller86/thing\", props.inputData)\n            .then(() => props.getData())\n            .catch(error => console.log(error))\n        props.setInputData(props.blankInfo)\n    }\n\n    function handleChange(event) {\n        const { name, value } = event.target\n        props.setInputData(prevInputData => ({\n\n            ...prevInputData,\n            [name]: value\n\n        }\n        ))\n    }\n\n    function toggleEdit() {\n        setInputData(prevState => ({ isEditing: !prevState.isEditing }))\n    }\n\n\n\n    const context = useContext(ThemeContext)\n    const list = context.uglyList.map((item, index) =>\n    ((\n        console.log(item._id),\n        < UglyItem\n            key={index}\n            id={item._id}\n            title={item.title}\n            img={item.imgUrl}\n            description={item.description}\n            handleIt={handleSubmit}\n            changeIt={handleChange}\n            toggleIt={toggleEdit}\n\n        />\n    ))\n    )\n\n    return (\n        <div>\n            {list}\n        </div>\n    )\n}\n\nexport default UglyList"]},"metadata":{},"sourceType":"module"}
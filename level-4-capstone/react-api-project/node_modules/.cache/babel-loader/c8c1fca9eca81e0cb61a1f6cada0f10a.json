{"ast":null,"code":"var _jsxFileName = \"/Users/chrismiller/development/vschool/assignments/level-4-capstone/react-api-project/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const [coordinates, setCoordinates] = useState({\n    latitude: \"\",\n    longitude: \"\"\n  });\n  const [xCoord, setXcoord] = useState(\"\");\n  const [yCoord, setYcoord] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCoordinates(prevCoordinates => {\n      return { ...prevCoordinates,\n        [name]: value\n      };\n    });\n  }\n\n  function createGridX() {\n    fetch(`https://api.weather.gov/points/${coordinates.latitude},${coordinates.longitude}`).then(response => response.json()).then(json => setXcoord(json.properties.gridX));\n  }\n\n  useEffect(() => {\n    createGridX(coordinates);\n  }); // useEffect(() => {\n  //     fetch(`https://api.weather.gov/points/${coordinates.latitude},${coordinates.longitude}`)\n  //         .then(response => response.json())\n  //         .then(json => setXcoord(json.properties.gridX))\n  // }, [coordinates])\n\n  useEffect(() => {\n    fetch(`https://api.weather.gov/points/${coordinates.latitude},${coordinates.longitude}`).then(response => response.json()).then(json => setYcoord(json.properties.gridY));\n  }, [coordinates]);\n  useEffect(() => {\n    fetch(`https://api.weather.gov/gridpoints/LWX/${xCoord},${yCoord}/forecast`).then(response => response.json()).then(json => setTemperature(json.properties.periods[0].temperature));\n  }, [xCoord, yCoord]);\n  console.log(coordinates.latitude);\n  console.log(coordinates.longitude);\n  console.log(xCoord);\n  console.log(yCoord);\n\n  function handleClick() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Current Temperature: \", temperature]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [\"Latitude: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"latitude\",\n      onChange: handleChange,\n      value: coordinates.latitude\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }, this), \"Longitude: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"longitude\",\n      onChange: handleChange,\n      value: coordinates.longitude\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"zCEQBNI8xarLyMndwh7SNPjB5vU=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/chrismiller/development/vschool/assignments/level-4-capstone/react-api-project/src/Form.js"],"names":["React","useState","useEffect","Form","coordinates","setCoordinates","latitude","longitude","xCoord","setXcoord","yCoord","setYcoord","temperature","setTemperature","handleChange","event","name","value","target","prevCoordinates","createGridX","fetch","then","response","json","properties","gridX","gridY","periods","console","log","handleClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\n\n\nfunction Form() {\n    const [coordinates, setCoordinates] = useState({ latitude: \"\", longitude: \"\" })\n    const [xCoord, setXcoord] = useState(\"\")\n    const [yCoord, setYcoord] = useState(\"\")\n    const [temperature, setTemperature] = useState(\"\")\n\n\n\n\n\n    function handleChange(event) {\n        const { name, value } = event.target\n        setCoordinates(prevCoordinates => {\n            return {\n                ...prevCoordinates,\n                [name]: value\n            }\n\n        })\n\n    }\n\n    function createGridX() {\n        fetch(`https://api.weather.gov/points/${coordinates.latitude},${coordinates.longitude}`)\n            .then(response => response.json())\n            .then(json => setXcoord(json.properties.gridX))\n    }\n\n    useEffect(() => {\n        createGridX(coordinates)\n    })\n\n    // useEffect(() => {\n    //     fetch(`https://api.weather.gov/points/${coordinates.latitude},${coordinates.longitude}`)\n    //         .then(response => response.json())\n    //         .then(json => setXcoord(json.properties.gridX))\n\n\n    // }, [coordinates])\n\n    useEffect(() => {\n        fetch(`https://api.weather.gov/points/${coordinates.latitude},${coordinates.longitude}`)\n            .then(response => response.json())\n            .then(json => setYcoord(json.properties.gridY))\n\n\n    }, [coordinates])\n\n\n\n    useEffect(() => {\n        fetch(`https://api.weather.gov/gridpoints/LWX/${xCoord},${yCoord}/forecast`)\n            .then(response => response.json())\n            .then(json => setTemperature(json.properties.periods[0].temperature))\n\n\n    }, [xCoord, yCoord])\n\n    console.log(coordinates.latitude)\n    console.log(coordinates.longitude)\n    console.log(xCoord)\n    console.log(yCoord)\n\n    function handleClick() {\n        return (\n            <div>Current Temperature: {temperature}</div>\n\n        )\n    }\n\n\n\n\n    return (\n        <form>\n            Latitude: <input\n                type=\"text\"\n                name=\"latitude\"\n                onChange={handleChange}\n                value={coordinates.latitude}\n            />\n            Longitude: <input\n                type=\"text\"\n                name=\"longitude\"\n                onChange={handleChange}\n                value={coordinates.longitude}\n            />\n            <br></br>\n            <button onClick={handleClick}>Submit</button>\n\n            {/* <div>Current Temperature: {temperature}</div> */}\n\n\n        </form >\n    )\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/chrismiller/development/vschool/assignments/level-4-capstone/react-api-project/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [xCoord, setXcoord] = useState(\"\");\n  const [yCoord, setYcoord] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n\n  function handleChange1(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setLatitude(prevLatitude => {\n      return { ...prevLatitude,\n        [name]: value\n      };\n    });\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setLongitude(prevLongitude => {\n      return { ...prevLongitude,\n        [name]: value\n      };\n    });\n  } // useEffect(() => {\n  //     fetch('https://api.weather.gov/points/38.8894,-77.0352')\n  //         .then(response => response.json())\n  //         .then(json => setYcoord(json.properties.gridY))\n  // }, [])\n  // useEffect(() => {\n  //     fetch('https://api.weather.gov/points/38.8894,-77.0352')\n  //         .then(response => response.json())\n  //         .then(json => setXcoord(json.properties.gridX))\n  // }, [])\n\n\n  useEffect(() => {\n    fetch(`https://api.weather.gov/points/${longitude},${latitude}`).then(response => response.json()).then(json => setYcoord(json.properties.gridY));\n  }, [latitude, longitude]);\n  useEffect(() => {\n    fetch(`https://api.weather.gov/points/${longitude},${latitude}`).then(response => response.json()).then(json => setXcoord(json.properties.gridX));\n  }, [latitude, longitude]);\n  useEffect(() => {\n    fetch(`https://api.weather.gov/gridpoints/LWX/${xCoord},${yCoord}/forecast`).then(response => response.json()).then(json => setTemperature(json.properties.periods[0].temperature));\n  }, [xCoord, yCoord]);\n\n  function handleClick(event) {\n    event.preventDefault();\n    console.log(\"click\");\n  }\n\n  console.log(latitude);\n  console.log(longitude);\n  console.log(xCoord);\n  console.log(yCoord);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [\"Latitude: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"latitude\",\n      onChange: handleChange1,\n      value: latitude\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 23\n    }, this), \"Longitude: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"longitude\",\n      onChange: handleChange,\n      value: longitude\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Current Temperature: \", temperature]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"td+D1OF15I/lCXEHZPl2f7b47vo=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/chrismiller/development/vschool/assignments/level-4-capstone/react-api-project/src/Form.js"],"names":["React","useState","useEffect","Form","longitude","setLongitude","latitude","setLatitude","xCoord","setXcoord","yCoord","setYcoord","temperature","setTemperature","handleChange1","event","name","value","target","prevLatitude","handleChange","prevLongitude","fetch","then","response","json","properties","gridY","gridX","periods","handleClick","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\n\n\nfunction Form() {\n    const [longitude, setLongitude] = useState(\"\")\n    const [latitude, setLatitude] = useState(\"\")\n\n    const [xCoord, setXcoord] = useState(\"\")\n    const [yCoord, setYcoord] = useState(\"\")\n    const [temperature, setTemperature] = useState(\"\")\n\n\n\n\n\n    function handleChange1(event) {\n        const { name, value } = event.target\n        setLatitude(prevLatitude => {\n            return {\n                ...prevLatitude,\n                [name]: value\n            }\n\n        })\n\n    }\n\n    function handleChange(event) {\n        const { name, value } = event.target\n        setLongitude(prevLongitude => {\n            return {\n                ...prevLongitude,\n                [name]: value\n            }\n\n        })\n\n    }\n\n    // useEffect(() => {\n    //     fetch('https://api.weather.gov/points/38.8894,-77.0352')\n    //         .then(response => response.json())\n    //         .then(json => setYcoord(json.properties.gridY))\n    // }, [])\n\n\n\n    // useEffect(() => {\n    //     fetch('https://api.weather.gov/points/38.8894,-77.0352')\n    //         .then(response => response.json())\n    //         .then(json => setXcoord(json.properties.gridX))\n    // }, [])\n\n\n\n\n\n\n    useEffect(() => {\n        fetch(`https://api.weather.gov/points/${longitude},${latitude}`)\n            .then(response => response.json())\n            .then(json => setYcoord(json.properties.gridY))\n    }, [latitude, longitude])\n\n    useEffect(() => {\n        fetch(`https://api.weather.gov/points/${longitude},${latitude}`)\n            .then(response => response.json())\n            .then(json => setXcoord(json.properties.gridX))\n    }, [latitude, longitude])\n\n\n\n    useEffect(() => {\n        fetch(`https://api.weather.gov/gridpoints/LWX/${xCoord},${yCoord}/forecast`)\n            .then(response => response.json())\n            .then(json => setTemperature(json.properties.periods[0].temperature))\n\n\n    }, [xCoord, yCoord])\n\n\n\n    function handleClick(event) {\n        event.preventDefault()\n        console.log(\"click\")\n\n\n    }\n\n    console.log(latitude)\n    console.log(longitude)\n    console.log(xCoord)\n    console.log(yCoord)\n\n\n\n    return (\n        <form>\n            Latitude: <input\n                type=\"text\"\n                name=\"latitude\"\n                onChange={handleChange1}\n                value={latitude}\n            />\n            Longitude: <input\n                type=\"text\"\n                name=\"longitude\"\n                onChange={handleChange}\n                value={longitude}\n            />\n            <br></br>\n            <button onClick={handleClick}>Submit</button>\n\n            <div>Current Temperature: {temperature}</div>\n\n\n        </form >\n    )\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}
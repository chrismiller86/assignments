{"ast":null,"code":"var _jsxFileName = \"/Users/chrismiller/development/vschool/assignments/level-4-capstone/react-api-project/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Form from \"./Form\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  //9.2524째 N, 83.8592째 W\n  // const lat = 58.7984;\n  // const lng = 17.8081;\n  // const params = 'airTemperature';\n  // fetch(`https://api.stormglass.io/v2/weather/point?lat=${lat}&lng=${lng}&params=${params}`, {\n  //     headers: {\n  //         'Authorization': '9113fd22-c54b-11ec-8ccc-0242ac130002-9113fdea-c54b-11ec-8ccc-0242ac130002'\n  //     }\n  // }).then((response) => response.json()).then((jsonData) => {\n  //     // Do something with response data.\n  // });\n  const [data, setData] = useState(null); // const [loading, setLoading] = useState(true)\n  // const [error, setError] = useState(null)\n\n  useEffect(() => {\n    fetch(`https://api.weather.gov/points/38.8894,-77.0352`).then(response => {\n      if (!response.ok) {\n        throw new Error('this is an HTTP error: The status is ${response.status}');\n      }\n\n      return response.json();\n    }).then(actualData => {\n      setData(actualData);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"[data]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Weather, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/chrismiller/development/vschool/assignments/level-4-capstone/react-api-project/src/Weather.js"],"names":["React","Form","useEffect","useState","Weather","data","setData","fetch","then","response","ok","Error","json","actualData","catch","err","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAGA,SAASC,OAAT,GAAmB;AAAA;;AACf;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,IAAD,CAAhC,CAde,CAef;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAAE,iDAAF,CAAL,CACKC,IADL,CACWC,QAAD,IAAc;AAChB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CACF,yDADE,CAAN;AAGH;;AACD,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACH,KARL,EASKJ,IATL,CASWK,UAAD,IAAgB;AAClBP,MAAAA,OAAO,CAACO,UAAD,CAAP;AACH,KAXL,EAYKC,KAZL,CAYYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH,KAdL;AAeH,GAhBQ,EAgBN,EAhBM,CAAT;AAoBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AASH;;GA/CQd,O;;KAAAA,O;AAiDT,eAAeA,OAAf","sourcesContent":["import React from \"react\"\nimport Form from \"./Form\"\nimport { useEffect, useState } from \"react\"\n\n\nfunction Weather() {\n    //9.2524째 N, 83.8592째 W\n    // const lat = 58.7984;\n    // const lng = 17.8081;\n    // const params = 'airTemperature';\n\n    // fetch(`https://api.stormglass.io/v2/weather/point?lat=${lat}&lng=${lng}&params=${params}`, {\n    //     headers: {\n    //         'Authorization': '9113fd22-c54b-11ec-8ccc-0242ac130002-9113fdea-c54b-11ec-8ccc-0242ac130002'\n    //     }\n    // }).then((response) => response.json()).then((jsonData) => {\n    //     // Do something with response data.\n    // });\n\n    const [data, setData] = useState(null)\n    // const [loading, setLoading] = useState(true)\n    // const [error, setError] = useState(null)\n\n    useEffect(() => {\n        fetch(`https://api.weather.gov/points/38.8894,-77.0352`)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(\n                        'this is an HTTP error: The status is ${response.status}'\n                    );\n                }\n                return response.json();\n            })\n            .then((actualData) => {\n                setData(actualData)\n            })\n            .catch((err) => {\n                console.log(err.message)\n            })\n    }, [])\n\n\n\n    return (\n        <>\n            <h1>Weather</h1>\n            <Form />\n            <h3>[data]</h3>\n\n\n        </>\n    )\n}\n\nexport default Weather\n\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/chrismiller/development/vschool/assignments/level-4-capstone/react-api-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Tide from \"./Tide\";\nimport Weather from \"./Weather\";\nimport Home from \"./Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [coordinates, setCoordinates] = useState({\n    latitude: \"\",\n    longitude: \"\"\n  });\n  const [xCoord, setXcoord] = useState(\"\");\n  const [yCoord, setYcoord] = useState(\"\");\n  const [temperature, setTemperature] = useState(\"\");\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setCoordinates(prevCoordinates => {\n      return { ...prevCoordinates,\n        [name]: value\n      };\n    });\n  }\n\n  function handleClick(event) {\n    event.preventDefault();\n    axios.get(`https://api.weather.gov/points/${coordinates.latitude},${coordinates.longitude}`).then(response => {\n      setXcoord(response.data.properties.gridX);\n      setYcoord(response.data.properties.gridY);\n      console.log(xCoord, yCoord);\n      coordinates.latitude = \"\";\n      coordinates.longitude = \"\";\n    }).catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    axios.get(`https://api.weather.gov/gridpoints/LWX/${xCoord},${yCoord}/forecast`) // .then(response => console.log(response.data.properties.periods[0].temperature))\n    .then(response => setTemperature(response.data.properties.periods[0].temperature)).catch(error => console.log(error));\n  }, [xCoord, yCoord]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/weather\",\n        children: \"Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/tide\",\n        children: \"Tide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"tide\",\n        element: /*#__PURE__*/_jsxDEV(Tide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"weather\",\n        element: /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TJiJ0fVBMhDre7YCz3eHz8i4zFE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chrismiller/development/vschool/assignments/level-4-capstone/react-api-project/src/App.js"],"names":["React","Link","BrowserRouter","Router","Routes","Route","Tide","Weather","Home","App","coordinates","setCoordinates","useState","latitude","longitude","xCoord","setXcoord","yCoord","setYcoord","temperature","setTemperature","handleChange","event","name","value","target","prevCoordinates","handleClick","preventDefault","axios","get","then","response","data","properties","gridX","gridY","console","log","catch","error","useEffect","periods"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Tide from \"./Tide\"\nimport Weather from \"./Weather\"\nimport Home from \"./Home\"\n\n\nfunction App() {\n\n  const [coordinates, setCoordinates] = useState({ latitude: \"\", longitude: \"\" })\n  const [xCoord, setXcoord] = useState(\"\")\n  const [yCoord, setYcoord] = useState(\"\")\n  const [temperature, setTemperature] = useState(\"\")\n\n\n\n\n\n  function handleChange(event) {\n    const { name, value } = event.target\n    setCoordinates(prevCoordinates => {\n      return {\n        ...prevCoordinates,\n        [name]: value\n      }\n\n    })\n\n  }\n\n  function handleClick(event) {\n    event.preventDefault()\n    axios.get(`https://api.weather.gov/points/${coordinates.latitude},${coordinates.longitude}`)\n      .then(response => {\n        setXcoord(response.data.properties.gridX)\n        setYcoord(response.data.properties.gridY)\n        console.log(xCoord, yCoord)\n        coordinates.latitude = \"\"\n        coordinates.longitude = \"\"\n\n      })\n      .catch(error => console.log(error))\n\n  }\n\n  useEffect(() => {\n    axios.get(`https://api.weather.gov/gridpoints/LWX/${xCoord},${yCoord}/forecast`)\n      // .then(response => console.log(response.data.properties.periods[0].temperature))\n      .then(response => setTemperature(response.data.properties.periods[0].temperature))\n      .catch(error => console.log(error))\n  }, [xCoord, yCoord])\n\n  return (\n    <Router>\n      <nav>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/weather\">Weather</Link>\n        <Link to=\"/tide\">Tide</Link>\n\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"tide\" element={<Tide />} />\n        <Route path=\"weather\" element={<Weather />} />\n      </Routes>\n    </Router>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}
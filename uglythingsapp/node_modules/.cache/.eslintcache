[{"/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/index.js":"1","/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/UglyContext.js":"2","/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/App.js":"3","/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/UglyForm.js":"4","/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/UglyList.js":"5","/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/UglyItem.js":"6"},{"size":242,"mtime":1647730120654,"results":"7","hashOfConfig":"8"},{"size":2689,"mtime":1647730093914,"results":"9","hashOfConfig":"8"},{"size":228,"mtime":1642085156246,"results":"10","hashOfConfig":"8"},{"size":1661,"mtime":1644897248619,"results":"11","hashOfConfig":"8"},{"size":560,"mtime":1647730177214,"results":"12","hashOfConfig":"8"},{"size":1554,"mtime":1647730379145,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1n4t4d",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/index.js",[],["30","31"],"/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/UglyContext.js",["32"],"import React, { useState } from \"react\"\nimport axios from \"axios\"\n\nconst ListContext = React.createContext()\n\nfunction UglyContext(props) {\n    const defaultThing = {\n        title: \"\",\n        imgUrl: \"\",\n        description: \"\",\n    }\n\n    const [thing, setThing] = React.useState(defaultThing)\n\n    function handleChange(event) {\n        const { name, value } = event.target\n        setThing(prevThing => ({ ...prevThing, [name]: value }))\n    }\n\n    const [thingsArray, setThingsArray] = useState([])\n\n    React.useEffect(() =>\n        axios.get(\"https://api.vschool.io/chrismiller/thing\")\n            .then(res => setThingsArray(res.data))\n            .catch(err => console.log(err))\n        , [])\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        const newThing = {\n            title: thing.title,\n            imgUrl: thing.imgUrl,\n            description: thing.description\n        }\n\n        axios.post(\"https://vschool.io/chrismiller/thing\", newThing)\n            .then(res => setThingsArray(prevThingsArray => (\n                [...prevThingsArray, res.data]\n            )))\n            .catch(err => console.log(err))\n\n        setThing(defaultThing)\n    }\n\n    function handleDelete(index) {\n        axios.delete(\"https://api.vschool.io/chrismiller/thing/\" + thingsArray[index]._id)\n            .then(res => setThingsArray(prevThingArray => {\n                return prevThingArray.filter(thing => thing._id !== thingsArray[index]._id)\n            }))\n            .catch(err => console.log(err))\n    }\n\n    const [edits, setEdits] = React.useState({\n        title: \"\",\n        imgUrl: \"\",\n        description: \"\",\n    })\n\n    function handleEditChange(e) {\n        const { name, value } = e.target\n        setEdits(prevEdits => ({ ...prevEdits, [name]: value }))\n    }\n\n    const [isEditing, setIsEditing] = React.useState(-1)\n\n    function handleEditSave(index) {\n        thingsArray.map(thing => {\n            setIsEditing(-1)\n            axios.put(\"https://api.vschool.io/chrismiller/thing/\" + thingsArray[index]._id, edits)\n                .then(res => setThingsArray(prevThingsArray => {\n                    return prevThingsArray.map(thing => {\n                        return thing._id === thingsArray[index]._id ? edits : thing\n                    })\n                }))\n                .catch(err => console.log(err))\n        })\n    }\n\n    return (\n        <ListContext.Provider value={{ edits, isEditing, setIsEditing, setEdits, handleEditSave, handleEditChange, handleChange, handleDelete, handleSubmit, thing, thingsArray, setThingsArray }}>\n            {props.children}\n        </ListContext.Provider>\n    )\n\n}\n\n\n\nexport { UglyContext, ListContext }","/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/App.js",[],"/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/UglyForm.js",[],"/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/UglyList.js",["33"],"import React from \"react\"\nimport { ListContext } from \"./UglyContext\"\nimport UglyItem from \"./UglyItem\"\nimport axios from \"axios\"\n\nfunction UglyList() {\n\n    const { thingsArray, handleDelte, handleEditSave } = React.useContext(ListContext)\n\n    const thingsListElement = thingsArray.map((thing, index) => {\n        return <UglyItem key={thing.id} {...thing} index={index} onSave={() => handleEditSave(index)} onDelete={() => handleDelte(index)} />\n\n    })\n\n    return (\n        <>\n            {thingsListElement}\n        </>\n    )\n}\n\n\n\nexport default UglyList","/Users/chrismiller/development/vschool/assignments/uglythingsapp/src/UglyItem.js",["34","35","36"],"import React from \"react\"\nimport { ListContext } from \"./UglyContext\"\n\n\nfunction UglyItem(props) {\n    const { handleDelete, handleEditChange, edits, setEdits, halndleEditSave, isEditing, setIsEditing } = React.useContext(ListContext)\n\n    function editItem() {\n        setIsEditing(isEditing === props._id ? -1 : props._id)\n        setEdits({\n            title: props.title,\n            imgUrl: props.imgUrl,\n            description: props.description\n        })\n    }\n    return (\n        <>\n            <div className=\"thingContainer\">\n                {isEditing === props._id ? <input value={edits.title} onChange={handleEditChange} name=\"title\" className=\"thing-edit\" placeholder=\"New Title\" /> : <h1 className=\"thing-title\">Title: {props.title}</h1>}\n                {isEditing === props._id ? <input value={edits.imgUrl} onChange={handleEditChange} name=\"imgUrl\" className=\"thing-edit\" placeholder=\"New Img Url\" /> : <img className=\"thing-img\" src={props.imgUrl} />}\n                {isEditing === props._id ? <input value={edits.description} onChange={handleEditChange} name=\"description\" className=\"thing-edit\" placeholder=\"New Description\" /> : <h2 className=\"thing-description\">Description: {props.description}</h2>}\n                <button className=\"thing-btn\" onClick={props.onDelete}>Delete</button>\n                {isEditing === props._id ? <button className=\"thing-btn\" onClick={props.onSave}></button> : <button className=\"thing-btn\" onClick={editItem}>Edit</button>}\n\n\n\n            </div>\n        </>\n    )\n\n}\n\nexport default UglyItem",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":68,"column":31,"nodeType":"43","messageId":"44","endLine":68,"endColumn":33},{"ruleId":"45","severity":1,"message":"46","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":13},{"ruleId":"45","severity":1,"message":"49","line":6,"column":13,"nodeType":"47","messageId":"48","endLine":6,"endColumn":25},{"ruleId":"45","severity":1,"message":"50","line":6,"column":62,"nodeType":"47","messageId":"48","endLine":6,"endColumn":77},{"ruleId":"51","severity":1,"message":"52","line":20,"column":168,"nodeType":"53","endLine":20,"endColumn":216},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'handleDelete' is assigned a value but never used.","'halndleEditSave' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]